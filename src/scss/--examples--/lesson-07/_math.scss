/*|============================
  | Додавання & Віднімання
  |============================
*/
.box {
  /* Додавання */
  width: 600px + 30px;
  // width: 960px + 10%; // Помилка!
  width: 960px + 30; // 990px
  width: 100% + 20%; // 120%

  /* Віднімання */
  /* якщо одиниці виміру різні, вираження вимагає обчислення, тому треба застосувавти функцію calc() */
  width: calc(600px - 30%);
  // width: 100% - 50px; // Помилка!
  width: 960px - 30px; // 930px
  width: 960px - 30; // 930px
  width: 100% - 20%; // 80%
}
/*|============================
  | Множення & Ділення
  |============================
*/
$vaule: 600px;

.box {
  /* множення */
  //width: 600px * 5px; //множення px*px призведе до помилки
  width: 600px * 5;
  width: 600px * 2 + 50px; // використання кількох операцій
  width: 2 * (600px + 50px); // використання дужок
  /* ділення */
  width: $vaule / 5; // використання змінних
  width: (600px / 2); //ділення виконається якщо додати дужки
  width: 600px / 5px + 10px; // 130px

  // width: 600px / 2; // препроцесор не інтерпритує "слєш" як ділення
  // width: (600px / 2px); //ділення px/px спрощує одиниці виміру
  // width: (600px / 2px); // ділення з одиницями виміру скорочує їх

  // @debug (600px / 5px); // 120
  // @debug (600px / 5); // 120px
  // @debug (600px / 5%); // 120px/%
  // @debug (120 + 10px); // 130px
}
/*|============================
  | Інтерполяція 
  |============================
*/
// #{$ім'я_змінної}, Інтерполяція - прийом, що дозволяє обраховувавти значення змінних під час операцій  зазвичай використовують для генерації імен класів та при збереженні певних значень
$name: "box";
$margin: 100px;

.box {
  width: $margin * 2;
}
.box {
  width: calc($margin * 2);
  width: calc(#{$margin} * 2);
}
.#{$name} {
  margin: $margin;
}
